# Comments Distribution

Interview Question Date: November 2020
Meta/Facebook Hard
Interview Questions ID 10297

# Description:

Write a query to calculate the distribution of comments by the count of users that joined Meta/Facebook between 2018 and 2020, for the month of January 2020.

The output should contain a count of comments and the corresponding number of users that made that number of comments in Jan-2020. 
For example, you'll be counting how many users made 1 comment, 2 comments, 3 comments, 4 comments, etc in Jan-2020. 
Your left column in the output will be the number of comments while your right column in the output will be the number of users. 
Sort the output from the least number of comments to highest.

To add some complexity, there might be a bug where an user post is dated before the user join date. You'll want to remove these posts from the result.

fb_users

id:         int
name:       varchar
joined_at:  datetime
city_id:    int
device:     int

fb_comments

user_id:    int
body:       varchar
created_at: datetime

# Solution:

-- Join both tables on id = user_id
-- filter by joined_at between 2018 and 2020, comments in month of january 2020, user post later than joined date
-- count 

with CTE1 as (select users.id, users.joined_at, comms.body, comms.created_at 
from fb_users users
join fb_comments comms on users.id = comms.user_id
where users.joined_at between '2018-01-01' AND '2020-12-31'
and comms.created_at between '2020-01-01' AND '2020-12-31'
and users.joined_at < comms.created_at
order by users.id),

CTE2 as (select id, count(id) as count_of
from CTE1
group by id)

select count_of as number_of_comments, count(count_of) as number_of_people
from CTE2
group by count_of
order by count_of asc

# Output: 
number_of_comments	number_of_people
1	                  3
2	                  3
3	                  2
4	                  4
5	                  1
6	                  1

# Discussion: 

This was a very interesting problem. The join was straightforward since we had the same ID in each. The restrictions were fine, we just had to do each individually.
We made good use of the BETWEEN function for dates.
The big difficulty came from actually knowing what we had to count. It required me to make a second CTE, where the table had the ID and the number of times it showed up
in our restricted first CTE. Once we had that, we just had to count the number of times each of THOSE counts showed up in CTE2. Very awkward to solve, very satisfying
to complete.
